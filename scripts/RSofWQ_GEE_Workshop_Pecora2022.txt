//// Remote Sensing of Water Quality in Google Earth Engine Workshop, Pecora Conference, October 2022
//// Author: Victoria G. Stengel, vstengel@usgs.gov
////
//// WORKSHOP GOALS:
/////Import multispectral imagery to qualitatively visualize a bloom event.
/////Import and manage image collections for cloud cover, time range, and study area.
/////Calculate and apply spectral water and Chlorophyll-a indices.
/////Produce time series chart.

//////////////////////////////////////////////////////////////////////////////
//// Add layer to map, center object: https://developers.google.com/earth-engine/apidocs/map-addlayer
//// Find bloom event:  March 2018, Lake Pontchartrain, New Orleans, Louisiana, USA: https://twitter.com/cyanotracker/status/977049503386742784, https://www.nola.com/news/environment/article_cf24acb9-70d4-5fa6-9b29-1239b5684324.html
//// Establish study area:
//// 1. digitize the AOI polygon using the 'draw a shape' tool
//// 2. import geometry; scale map
 Map.centerObject(AOI, 9)

/////////////////////////////////////////////////////////////////////////////
//// Visualization of 2018 bloom event:
//// 1. Import a Landsat image from March 3, 2018, Lake Pontchartrain, New Orleans, Louisiana, USA: https://twitter.com/cyanotracker/status/977049503386742784, https://www.nola.com/news/environment/article_cf24acb9-70d4-5fa6-9b29-1239b5684324.html
//// 2. Visualize image, add to map

//// Import Landsat 8 image (because Landsat 8 was producing in 2018): https://developers.google.com/earth-engine/datasets/catalog/landsat-8
 var Landsat8_20180303 = ee.Image('LANDSAT/LC08/C01/T1_SR/LC08_022039_20180303')

//// Create true color (RBG432) visualization for Landsat 8 imagery
 var L8_truecolorvis = {bands: ['B4','B3','B2'], min: 0, max: 3000, gamma: 1.4,};

//// Add image as layer to map 
 Map.addLayer(Landsat8_20180303,  L8_truecolorvis, 'True color Landsat 8');


/////////////////////////////////////////////////////////////////////////////
//// CREATE WQ SPECTRAL INDEX
//// CREATE TIME SERIES CHART
//// 1. Compute spectral indices: NDCI and NDWI.
//// 2. Create Sentinel 2 cloud mask.
//// 3. Create dynamic water mask.
//// 4. Import Sentinel 2 image collection, apply filters, indices, and masks to image collection.
//// 5. Visualize image, add to map. 
//// 6. Produce time series for zonal mean NDCI at point location.

//// Function to calculate spectral indices 
  var indices = function(image) {
  //// GEE Normalized Difference: https://developers.google.com/earth-engine/apidocs/ee-image-normalizeddifference
  //// Normalized Difference Water Index (NDWI): https://custom-scripts.sentinel-hub.com/custom-scripts/sentinel-2/ndwi/#
  var NDWI = image.normalizedDifference(['B3','B8']).rename('ndwi');
  //// Normalized Difference Chlorophyll Index (NDCI): https://custom-scripts.sentinel-hub.com/custom-scripts/sentinel-2/ndci/#
  //// Mishra and Mishra, 2012 (https://doi.org/10.1016/j.rse.2011.10.016); Beck, 2016 (https://doi.org/10.1016/j.rse.2016.03.002)
  var NDCI = image.normalizedDifference(['B5','B4']).rename('ndci'); 
  //// alternate way to compute index  
  //// var NDCI = img.expression(
  ////   '(REONE-RED)/(REONE+RED)', {
  ////      'REONE': img.select('B5'),
  ////      'RED': img.select('B4'),
  ////}).rename('ndci');

  return image
    .addBands(NDWI)
    .addBands(NDCI);
};

//// Function to mask clouds using the Sentinel 2 QA band (https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2_SR)
 function maskS2clouds(image) {
  var qa = image.select('QA60');

//// Bits 10 and 11 are clouds and cirrus, respectively.
  var cloudBitMask = 1 << 10;
  var cirrusBitMask = 1 << 11;

//// Both flags should be set to zero, indicating clear conditions.
  var mask = qa.bitwiseAnd(cloudBitMask).eq(0)
      .and(qa.bitwiseAnd(cirrusBitMask).eq(0));

  return image.updateMask(mask).divide(10000);
}

//// Function to calculate dynamic water mask using NDWI
 function watermask(image) {
  var ndwimask = image.select('ndwi').gte(0)
  return image.updateMask(ndwimask);
 }

//// Import Sentinel-2 Surface Reflectance image collection (modified from: https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2_SR)
//// IMPORT SENTINEL-2 IMAGE COLLECTION
//// APPLY FILTERS: DATE, CLOUD, AND AOI 
//// APPLY INDICES AND MASKS 
 var dataset = ee.ImageCollection('COPERNICUS/S2')
                  //// Filter date range
                  .filterDate('2018-03-21', '2022-12-31')
                  //// Filter cloud percentage in image metadata
                  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 50))
                  //// Filter bounds by study area
                  .filterBounds(AOI)
                  //// Map cloud mask function
                  .map(maskS2clouds)
                  //// Map indices function
                  .map(indices)
                  //// Map water mask function
                  .map(watermask);





//// SELECT AND PRINT FIRST IMAGE IN COLLECTION 
 var First_S2 = dataset.limit(1, 'system:time_start').first();
 print (First_S2, 'Latest true color mosaic')
 
//// Note: If you would like to review the original image in this image collection sans masking, etc.
//// Import single Sentinel 2 image (https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2)
//var S2_20180322 = ee.Image('COPERNICUS/S2/20180322T163939_20180322T164513_T15RYP')

//// Visualize image, add to map
// Map.addLayer(S2_20180322, {bands: ['B8', 'B4', 'B3'], max: 4000}, 'S2')

//// Visualize index image, with cloud and water masking applied
 var S2_CHLvis = {bands:['ndci'], min:-1, max:1, palette:['darkblue', 'dodgerblue', 'cyan','yellowgreen','greenyellow', 'orange']}; 
 

//// Add to map
 Map.addLayer(First_S2, S2_CHLvis, 'S2 NDCI');


// Create and place a point with the 'Add a marker' tool, name it ‘point’ 
// Create time series chart with reducer to extract mean chlorophyll for the 500m zone around point feature   
 var NDCIChart = ui.Chart.image.series(dataset.select('ndci'), point, ee.Reducer.mean(), 500, 'system:index'); 


//// Chart parameters
  NDCIChart.setOptions({
    title: 'Time series for S2 collection',
    vAxis: {title: 'Normalized Difference Chlorophyll Index (NDCI) value'},
    hAxis: {title: 'Date', format: 'MM-yy', gridlines: {count: 7}},
    series: {
      0: {
       color: 'black',
       lineWidth: 0,
       pointsVisible: true,
       pointSize: 2,
     }
    },
    legend: {position: 'left'},
  });

//// Print chart  
print (NDCIChart);
